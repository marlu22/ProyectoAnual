// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250717130909_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.Contacto", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaIdPersona")
                        .HasColumnType("int");

                    b.Property<string>("TipoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("DataAccess.Entities.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenero"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            IdGenero = 1,
                            Nombre = "Masculino"
                        },
                        new
                        {
                            IdGenero = 2,
                            Nombre = "Femenino"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.HistorialContrasena", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<byte[]>("ContrasenaScript")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdHistorial");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("HistorialContrasenas");
                });

            modelBuilder.Entity("DataAccess.Entities.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocalidad"));

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLocalidad");

                    b.HasIndex("IdPartido");

                    b.ToTable("Localidades");

                    b.HasData(
                        new
                        {
                            IdLocalidad = 1,
                            IdPartido = 1,
                            Nombre = "La Plata"
                        },
                        new
                        {
                            IdLocalidad = 2,
                            IdPartido = 1,
                            Nombre = "City Bell"
                        },
                        new
                        {
                            IdLocalidad = 3,
                            IdPartido = 1,
                            Nombre = "Gonnet"
                        },
                        new
                        {
                            IdLocalidad = 4,
                            IdPartido = 2,
                            Nombre = "Quilmes"
                        },
                        new
                        {
                            IdLocalidad = 5,
                            IdPartido = 2,
                            Nombre = "Bernal"
                        },
                        new
                        {
                            IdLocalidad = 6,
                            IdPartido = 3,
                            Nombre = "Lomas de Zamora"
                        },
                        new
                        {
                            IdLocalidad = 7,
                            IdPartido = 3,
                            Nombre = "Banfield"
                        },
                        new
                        {
                            IdLocalidad = 8,
                            IdPartido = 4,
                            Nombre = "Córdoba"
                        },
                        new
                        {
                            IdLocalidad = 9,
                            IdPartido = 4,
                            Nombre = "Alta Córdoba"
                        },
                        new
                        {
                            IdLocalidad = 10,
                            IdPartido = 5,
                            Nombre = "Río Cuarto"
                        },
                        new
                        {
                            IdLocalidad = 11,
                            IdPartido = 5,
                            Nombre = "Las Higueras"
                        },
                        new
                        {
                            IdLocalidad = 12,
                            IdPartido = 6,
                            Nombre = "Mendoza"
                        },
                        new
                        {
                            IdLocalidad = 13,
                            IdPartido = 6,
                            Nombre = "Guaymallén"
                        },
                        new
                        {
                            IdLocalidad = 14,
                            IdPartido = 7,
                            Nombre = "Godoy Cruz"
                        },
                        new
                        {
                            IdLocalidad = 15,
                            IdPartido = 7,
                            Nombre = "Las Heras"
                        },
                        new
                        {
                            IdLocalidad = 16,
                            IdPartido = 8,
                            Nombre = "Rosario"
                        },
                        new
                        {
                            IdLocalidad = 17,
                            IdPartido = 8,
                            Nombre = "Funes"
                        },
                        new
                        {
                            IdLocalidad = 18,
                            IdPartido = 9,
                            Nombre = "Santa Fe"
                        },
                        new
                        {
                            IdLocalidad = 19,
                            IdPartido = 9,
                            Nombre = "Santo Tomé"
                        },
                        new
                        {
                            IdLocalidad = 20,
                            IdPartido = 10,
                            Nombre = "Retiro"
                        },
                        new
                        {
                            IdLocalidad = 21,
                            IdPartido = 10,
                            Nombre = "San Nicolás"
                        },
                        new
                        {
                            IdLocalidad = 22,
                            IdPartido = 1,
                            Nombre = "Tolosa"
                        },
                        new
                        {
                            IdLocalidad = 23,
                            IdPartido = 2,
                            Nombre = "Ezpeleta"
                        },
                        new
                        {
                            IdLocalidad = 24,
                            IdPartido = 3,
                            Nombre = "Temperley"
                        },
                        new
                        {
                            IdLocalidad = 25,
                            IdPartido = 4,
                            Nombre = "Nueva Córdoba"
                        },
                        new
                        {
                            IdLocalidad = 26,
                            IdPartido = 5,
                            Nombre = "Holmberg"
                        },
                        new
                        {
                            IdLocalidad = 27,
                            IdPartido = 6,
                            Nombre = "Luján de Cuyo"
                        },
                        new
                        {
                            IdLocalidad = 28,
                            IdPartido = 7,
                            Nombre = "Maipú"
                        },
                        new
                        {
                            IdLocalidad = 29,
                            IdPartido = 8,
                            Nombre = "Roldán"
                        },
                        new
                        {
                            IdLocalidad = 30,
                            IdPartido = 9,
                            Nombre = "Recreo"
                        },
                        new
                        {
                            IdLocalidad = 31,
                            IdPartido = 10,
                            Nombre = "Recoleta"
                        },
                        new
                        {
                            IdLocalidad = 32,
                            IdPartido = 10,
                            Nombre = "Palermo"
                        },
                        new
                        {
                            IdLocalidad = 33,
                            IdPartido = 10,
                            Nombre = "Belgrano"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Partido", b =>
                {
                    b.Property<int>("IdPartido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPartido"));

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPartido");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Partidos");

                    b.HasData(
                        new
                        {
                            IdPartido = 1,
                            IdProvincia = 1,
                            Nombre = "La Plata"
                        },
                        new
                        {
                            IdPartido = 2,
                            IdProvincia = 1,
                            Nombre = "Quilmes"
                        },
                        new
                        {
                            IdPartido = 3,
                            IdProvincia = 1,
                            Nombre = "Lomas de Zamora"
                        },
                        new
                        {
                            IdPartido = 4,
                            IdProvincia = 5,
                            Nombre = "Córdoba Capital"
                        },
                        new
                        {
                            IdPartido = 5,
                            IdProvincia = 5,
                            Nombre = "Río Cuarto"
                        },
                        new
                        {
                            IdPartido = 6,
                            IdProvincia = 12,
                            Nombre = "Mendoza Capital"
                        },
                        new
                        {
                            IdPartido = 7,
                            IdProvincia = 12,
                            Nombre = "Godoy Cruz"
                        },
                        new
                        {
                            IdPartido = 8,
                            IdProvincia = 20,
                            Nombre = "Rosario"
                        },
                        new
                        {
                            IdPartido = 9,
                            IdProvincia = 20,
                            Nombre = "Santa Fe Capital"
                        },
                        new
                        {
                            IdPartido = 10,
                            IdProvincia = 24,
                            Nombre = "Comuna 1"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("DataAccess.Entities.PermisoUsuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("PermisoIdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdPermiso");

                    b.HasIndex("PermisoIdPermiso");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("PermisosUsuarios");
                });

            modelBuilder.Entity("DataAccess.Entities.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDoc")
                        .HasColumnType("int");

                    b.Property<string>("Legajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdLocalidad");

                    b.HasIndex("IdTipoDoc");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            IdPersona = 1,
                            Altura = "123",
                            Apellido = "Pérez",
                            Calle = "Calle Falsa",
                            Correo = "juan.perez@example.com",
                            Cuil = "20-12345678-9",
                            FechaIngreso = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdGenero = 1,
                            IdLocalidad = 1,
                            IdTipoDoc = 1,
                            Legajo = "1001",
                            Nombre = "Juan",
                            NumDoc = "12345678"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.PoliticaSeguridad", b =>
                {
                    b.Property<int>("IdPolitica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPolitica"));

                    b.Property<bool>("Autenticacion2FA")
                        .HasColumnType("bit");

                    b.Property<int>("CantPreguntas")
                        .HasColumnType("int");

                    b.Property<bool>("CaracterEspecial")
                        .HasColumnType("bit");

                    b.Property<bool>("LetrasYNumeros")
                        .HasColumnType("bit");

                    b.Property<bool>("MayusYMinus")
                        .HasColumnType("bit");

                    b.Property<int>("MinCaracteres")
                        .HasColumnType("int");

                    b.Property<bool>("NoRepetirAnteriores")
                        .HasColumnType("bit");

                    b.Property<bool>("SinDatosPersonales")
                        .HasColumnType("bit");

                    b.HasKey("IdPolitica");

                    b.ToTable("PoliticasSeguridad");

                    b.HasData(
                        new
                        {
                            IdPolitica = 1,
                            Autenticacion2FA = false,
                            CantPreguntas = 2,
                            CaracterEspecial = true,
                            LetrasYNumeros = true,
                            MayusYMinus = true,
                            MinCaracteres = 8,
                            NoRepetirAnteriores = true,
                            SinDatosPersonales = true
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.PreguntaSeguridad", b =>
                {
                    b.Property<int>("IdPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPregunta"));

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPregunta");

                    b.ToTable("PreguntasSeguridad");
                });

            modelBuilder.Entity("DataAccess.Entities.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            IdProvincia = 1,
                            Nombre = "Buenos Aires"
                        },
                        new
                        {
                            IdProvincia = 2,
                            Nombre = "Catamarca"
                        },
                        new
                        {
                            IdProvincia = 3,
                            Nombre = "Chaco"
                        },
                        new
                        {
                            IdProvincia = 4,
                            Nombre = "Chubut"
                        },
                        new
                        {
                            IdProvincia = 5,
                            Nombre = "Córdoba"
                        },
                        new
                        {
                            IdProvincia = 6,
                            Nombre = "Corrientes"
                        },
                        new
                        {
                            IdProvincia = 7,
                            Nombre = "Entre Ríos"
                        },
                        new
                        {
                            IdProvincia = 8,
                            Nombre = "Formosa"
                        },
                        new
                        {
                            IdProvincia = 9,
                            Nombre = "Jujuy"
                        },
                        new
                        {
                            IdProvincia = 10,
                            Nombre = "La Pampa"
                        },
                        new
                        {
                            IdProvincia = 11,
                            Nombre = "La Rioja"
                        },
                        new
                        {
                            IdProvincia = 12,
                            Nombre = "Mendoza"
                        },
                        new
                        {
                            IdProvincia = 13,
                            Nombre = "Misiones"
                        },
                        new
                        {
                            IdProvincia = 14,
                            Nombre = "Neuquén"
                        },
                        new
                        {
                            IdProvincia = 15,
                            Nombre = "Río Negro"
                        },
                        new
                        {
                            IdProvincia = 16,
                            Nombre = "Salta"
                        },
                        new
                        {
                            IdProvincia = 17,
                            Nombre = "San Juan"
                        },
                        new
                        {
                            IdProvincia = 18,
                            Nombre = "San Luis"
                        },
                        new
                        {
                            IdProvincia = 19,
                            Nombre = "Santa Cruz"
                        },
                        new
                        {
                            IdProvincia = 20,
                            Nombre = "Santa Fe"
                        },
                        new
                        {
                            IdProvincia = 21,
                            Nombre = "Santiago del Estero"
                        },
                        new
                        {
                            IdProvincia = 22,
                            Nombre = "Tierra del Fuego"
                        },
                        new
                        {
                            IdProvincia = 23,
                            Nombre = "Tucumán"
                        },
                        new
                        {
                            IdProvincia = 24,
                            Nombre = "CABA"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RespuestaSeguridad", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRespuesta"));

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("PreguntaIdPregunta")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdRespuesta");

                    b.HasIndex("PreguntaIdPregunta");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("RespuestasSeguridad");
                });

            modelBuilder.Entity("DataAccess.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            Nombre = "Administrador"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RolPermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("PermisoIdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("RolIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdPermiso");

                    b.HasIndex("PermisoIdPermiso");

                    b.HasIndex("RolIdRol");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("DataAccess.Entities.TipoDoc", b =>
                {
                    b.Property<int>("IdTipoDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDoc"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDoc");

                    b.ToTable("TiposDoc");

                    b.HasData(
                        new
                        {
                            IdTipoDoc = 1,
                            Nombre = "DNI"
                        },
                        new
                        {
                            IdTipoDoc = 2,
                            Nombre = "Pasaporte"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("CambioContrasenaObligatorio")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ContrasenaScript")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("FechaBloqueo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimoCambio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int?>("IdPolitica")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuarioBloqueo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoliticaSeguridadIdPolitica")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdRol");

                    b.HasIndex("PoliticaSeguridadIdPolitica");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            CambioContrasenaObligatorio = true,
                            ContrasenaScript = new byte[] { 169, 51, 211, 112, 211, 78, 1, 75, 47, 222, 42, 90, 127, 165, 8, 235, 201, 135, 125, 114, 131, 201, 74, 69, 193, 214, 198, 141, 75, 147, 49, 62 },
                            FechaBloqueo = new DateTime(9999, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaUltimoCambio = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPersona = 1,
                            IdRol = 1,
                            UsuarioNombre = "admin"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Contacto", b =>
                {
                    b.HasOne("DataAccess.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaIdPersona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("DataAccess.Entities.HistorialContrasena", b =>
                {
                    b.HasOne("DataAccess.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataAccess.Entities.Localidad", b =>
                {
                    b.HasOne("DataAccess.Entities.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("IdPartido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("DataAccess.Entities.Partido", b =>
                {
                    b.HasOne("DataAccess.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DataAccess.Entities.PermisoUsuario", b =>
                {
                    b.HasOne("DataAccess.Entities.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoIdPermiso");

                    b.HasOne("DataAccess.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataAccess.Entities.Persona", b =>
                {
                    b.HasOne("DataAccess.Entities.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.TipoDoc", "TipoDoc")
                        .WithMany()
                        .HasForeignKey("IdTipoDoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Localidad");

                    b.Navigation("TipoDoc");
                });

            modelBuilder.Entity("DataAccess.Entities.RespuestaSeguridad", b =>
                {
                    b.HasOne("DataAccess.Entities.PreguntaSeguridad", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaIdPregunta");

                    b.HasOne("DataAccess.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Pregunta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataAccess.Entities.RolPermiso", b =>
                {
                    b.HasOne("DataAccess.Entities.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoIdPermiso");

                    b.HasOne("DataAccess.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolIdRol");

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DataAccess.Entities.Usuario", b =>
                {
                    b.HasOne("DataAccess.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.PoliticaSeguridad", "PoliticaSeguridad")
                        .WithMany()
                        .HasForeignKey("PoliticaSeguridadIdPolitica");

                    b.Navigation("Persona");

                    b.Navigation("PoliticaSeguridad");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
